version: "3"

#
# sub namespace: https://taskfile.dev/#/usage?id=including-other-taskfiles
#
includes:
  web:
    taskfile: ./cassie_web/Taskfile.yml
    dir: ./cassie_web/


#
# global vars: https://taskfile.dev/#/usage?id=variables
#
vars:
  VAR1: "some-var"

# global env:
env:
  ENV1: testing
  WORKSPACE: "crates/"

# env file:
dotenv:
  - .env

################################################################################################

tasks:
  default:
    cmds:
      - task: init
      - task: run

  init:
    cmds:
      - task: init:env
      - task: install

  init:env:
    cmds:
      - cp .env.local .env

  dev:
    cmds:
      - rustup toolchain install nightly
      - rustup toolchain list

  install:pre:
    cmds:
      - brew install go-task/tap/go-task
      - task --version

  install:tool:
    cmds:
      - cargo install sea-orm-cli
      - sea-orm-cli -h
      - cargo install cargo-watch

  install:
    cmds:
      - cargo update

  ################################################################################

  model:init:
    cmds:
      - sea-orm-cli generate entity -u ${DATABASE_URL} -o {{.APP_NAME}}/src
      - cd {{.APP_NAME}}; cargo init --lib;
      - cd {{.APP_NAME}}; cp -f src/mod.rs src/lib.rs; rm src/mod.rs;
    vars:
      APP_NAME: "crates/rs-cms-entity"
    ignore_error: true

  migration:init:
    cmds:
      - sea-orm-cli migrate init -d {{.APP_NAME}}
    #      - sea-orm-cli migrate generate create -d {{.APP_NAME}}  # generate empty migration file
    vars:
      APP_NAME: "crates/rs-cms-migration"

  new:
    cmds:
      - cd ${WORKSPACE}; cargo new --lib ${NEW_PROJECT_NAME}

  new:bin:
    cmds:
      - cd ${WORKSPACE}; cargo new ${NEW_PROJECT_NAME}

  new:lib:
    cmds:
      - cd ${WORKSPACE}; cargo new --lib ${NEW_PROJECT_NAME}

  ################################################################################

  release:
    cmds:
      - task: scripts:release
      - open ./target/release

  install:this:
    cmds:
      - task: scripts:install
      - open ./target/release

  run:
    cmds:
      - cargo run



  ################################################################################

  # search lib:
  search:
    cmds:
      - cargo search


  ###########################################################################

  quick:
    cmds:
      - task: commit
      - task: commit
      - git status
    ignore_error: true

  commit:
    cmds:
      - git add .
      - git commit -m "update"
    ignore_error: true

  push:
    cmds:
      - task: push:mirror

  push:mirror:
    cmds:
      - git push mirror dev/2022-09 --tags
      - repo_url=`git remote -v | grep push | grep mirror | awk -F ":" '{print $2}' | awk -F ".git" '{print "https://github.com/"$1}'`; open $repo_url
